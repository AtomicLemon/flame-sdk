/**
 * Peatio SDK
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.2.4
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.PeatioSdk);
  }
}(this, function(expect, PeatioSdk) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new PeatioSdk.TickersApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('TickersApi', function() {
    describe('getV2Tickers', function() {
      it('should call getV2Tickers successfully', function(done) {
        //uncomment below and update the code to test getV2Tickers
        instance.getV2Tickers(function(error, data, request) {
          if (error) throw error;

          if (Object.keys(data).length > 0) {
            let key = Object.keys(data)[0];
            expect(data[key]).to.be.a(PeatioSdk.TickerInfo);
          }
          done();
        });
      });
    });
    describe('getV2TickersMarket', function() {
      it('should call getV2TickersMarket successfully', function(done) {
        //uncomment below and update the code to test getV2TickersMarket
        let market = 'btcusd';

        instance.getV2TickersMarket(market, function(error, data, request) {
          if (error) throw error;

          expect(data).to.be.a(PeatioSdk.TickerInfo);
          done();
        });
      });
    });
  });

}));
